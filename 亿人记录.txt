接口地址  http://172.16.1.58:8080/swagger-ui.html

vue cli 构建项目
引入mintui
mian.js 载入mintui


// 引用组件
1.定义组件 Test.vue
2.html中引用  <test></test>
3.js 引入用组件   import Test from '@/components/Test'
4.js 中定义引入的组件  components: { Test }


// 实例方法
方法中要使用 data 中的变量 name , 必须加上 this.name
变量定义在模块中,不要在方法里定义

方法之间的调用也要加this    a ( this.b() )


mounted   生命周期,组件创建方法后执行的函数


//定位及切换城市

1).定位城市
1.请求接口, 
2.将结果存到vuex的全局变量 , 变量为对象, 存 name 和 id
3.html中调用定位到的城市

2).显示城市
1.请求接口,
2.将结果保存到当前组件变量,   遍历城市列表
2.写点击事件, 写切换城市路由, 将城市名和id传到全局变量, 在切换的城市中显示切换城市的名字,   ( 首页设置, 请求定位路由, 如果全局变量中城市名字不为空, 则显示它, 否则显示默认定位城市)


// 首页商品
1.获取数据
2.循环输出
3.调用数据

数组下多个对象需要v-for循环 然后用 {{xxx.msg}} 展示数据

如果请求的是单个商品信息, 直接用 {{xxx.msg}}


// 购物车修改
1.从缓存获取购物车信息, 赋值给变量
2. 点击加号的时候, 缓存num + 1



// 接口
先登录
openId 123
wxImg 122
wxNickName 115

登录成功后获取 access_token


调用其他接口都必须填写 access_token



// 使用axios
首先安装axios

然后再main.js中引用
/ 引入 axios
import axios from 'axios'
// Vue.prototype.axios = axios 
//组件调用this.axios.get(...)
// Vue.prototype.$ajax = axios  
//换个名字 组件调用this.$ajax.get(...)
window.axios = axios  
// 组件中调用 axios.get(...)

然后在config/index.js中配置
 proxyTable: {
      '/api': {
        target: 'http://cangdu.org:8001/',
        changeOrigin: true,
        pathRewrite: {
          '^/api': ''
        }
      }
    },

调用的时候 "http://cangdu.org:8001/shopping/restaurants?latitude=31.22967&longitude=121.4762".
改为   api/shopping/restaurants?latitude=31.22967&longitude=121.4762
api代表之前设置的地址

最后重启项目  npm run dev